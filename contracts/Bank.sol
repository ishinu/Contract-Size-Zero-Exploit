// SPDX-License-Identifier:MIT
pragma solidity ^0.8.9;

contract Bank {
    mapping(address=>uint) public balances;

    function isContract(address _account) public view returns(bool){
        uint size;
        assembly{
            size := extcodesize(_account)
        }
        return size > 0;
    }

    function deposit() public payable{
        balances[msg.sender] += msg.value;
    }

    function withdraw() public payable{
        require(!isContract(tx.origin),"No contracts allowed");
        uint balance = balances[msg.sender];
        require(balance>0);
        (bool sent,) = msg.sender.call{value:balance}("");
        require(sent,"Failed to send Ether");
        balances[msg.sender] = 0;
    }

    function getBalances() view public returns(uint){
        return address(this).balance;
    }
}
